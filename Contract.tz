{ parameter
    (or (or (pair %approve (address %spender) (nat %value))
            (pair %mintOrBurn (int %quantity) (address %target)))
        (pair %transfer (address %from) (pair (address %to) (nat %value)))) ;
  storage
    (pair (big_map %tokens address nat)
          (pair (big_map %allowances (pair (address %owner) (address %spender)) nat)
                (pair (address %admin)
                      (pair (nat %total_supply)
                            (pair (big_map %metadata string bytes)
                                  (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))))) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 GET 3 ;
                 DUP 3 ;
                 CAR ;
                 SENDER ;
                 PAIR ;
                 PUSH string "UnsafeAllowanceChange" ;
                 PUSH nat 0 ;
                 DUP 6 ;
                 CDR ;
                 COMPARE ;
                 GT ;
                 PUSH nat 0 ;
                 DUP 5 ;
                 DUP 5 ;
                 GET ;
                 IF_NONE { PUSH nat 0 } {} ;
                 COMPARE ;
                 GT ;
                 AND ;
                 IF { DROP } { FAILWITH } ;
                 DUG 2 ;
                 DIG 3 ;
                 CDR ;
                 PUSH nat 0 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 COMPARE ;
                 EQ ;
                 IF { DROP ; NONE nat } { SOME } ;
                 DIG 3 ;
                 UPDATE ;
                 UPDATE 3 ;
                 NIL operation ;
                 PAIR }
               { SWAP ;
                 PUSH string "OnlyAdmin" ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 5 ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF { DROP } { FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 DUP 4 ;
                 CDR ;
                 GET ;
                 IF_NONE { PUSH nat 0 } {} ;
                 ADD ;
                 ISNAT ;
                 IF_NONE
                   { PUSH string "Cannot burn more than the target's balance." ; FAILWITH }
                   {} ;
                 DUP 3 ;
                 CAR ;
                 DUP 3 ;
                 GET 7 ;
                 ADD ;
                 ABS ;
                 DIG 2 ;
                 DUP ;
                 CAR ;
                 PUSH nat 0 ;
                 DUP 5 ;
                 COMPARE ;
                 EQ ;
                 IF { DIG 3 ; DROP ; NONE nat } { DIG 3 ; SOME } ;
                 DIG 4 ;
                 CDR ;
                 UPDATE ;
                 UPDATE 1 ;
                 SWAP ;
                 UPDATE 7 ;
                 NIL operation ;
                 PAIR } }
           { SWAP ;
             DUP ;
             GET 3 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             DUP 4 ;
             CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { SENDER ;
                  DUP 5 ;
                  CAR ;
                  PAIR ;
                  DUP 5 ;
                  GET 4 ;
                  DUP 4 ;
                  DIG 2 ;
                  GET ;
                  IF_NONE { PUSH nat 0 } {} ;
                  SUB ;
                  PUSH string "NotEnoughAllowance" ;
                  PUSH int 0 ;
                  DIG 2 ;
                  COMPARE ;
                  GE ;
                  IF { DROP } { FAILWITH } ;
                  SWAP }
                { SWAP } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             DUP 5 ;
             GET 3 ;
             GET ;
             IF_NONE { PUSH nat 0 } { DUP 5 ; GET 4 ; ADD } ;
             DUP 5 ;
             GET 4 ;
             DUP 4 ;
             DUP 7 ;
             CAR ;
             GET ;
             IF_NONE { PUSH nat 0 } {} ;
             SUB ;
             PUSH string "NotEnoughBalance" ;
             PUSH int 0 ;
             DUP 3 ;
             COMPARE ;
             GT ;
             IF { DROP } { FAILWITH } ;
             DIG 4 ;
             DIG 4 ;
             PUSH nat 0 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             IF { DIG 3 ; DROP ; NONE nat } { DIG 3 ; SOME } ;
             DUP 6 ;
             GET 3 ;
             UPDATE ;
             DIG 2 ;
             ABS ;
             PUSH nat 0 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             EQ ;
             IF { DROP ; NONE nat } { SOME } ;
             DIG 4 ;
             CAR ;
             UPDATE ;
             UPDATE 1 ;
             SWAP ;
             UPDATE 3 ;
             NIL operation ;
             PAIR } } ;
  view "getTotalSupply" unit nat { CDR ; GET 7 } ;
  view "getBalance"
       address
       nat
       { DUP ; CDR ; CAR ; SWAP ; CAR ; GET ; IF_NONE { PUSH nat 0 } {} } ;
  view "getAllowance"
       (pair (address %owner) (address %spender))
       nat
       { DUP ; CDR ; GET 3 ; SWAP ; CAR ; GET ; IF_NONE { PUSH nat 0 } {} } }

